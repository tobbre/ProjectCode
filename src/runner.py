import numpy as np
import graph
import algorithms
import copy
import time
import scipy
import matplotlib
from matplotlib import pyplot as plt
plt.rcParams['figure.dpi'] = 700
import networkx as nx


def minnodecut_draw(G, timestamp):
	a = time.time()
	H = copy.deepcopy(G)
	b = time.time()
	print("Copying G: ", str(b - a))
	cutset = nx.minimum_node_cut(H)
	c = time.time()
	print("Fidning mininmum node cut: ", str(c - b))
	pos = nx.spring_layout(H, seed=3113794652)
	H.remove_nodes_from(cutset)
	comps, largest = algorithms.connected_comps_and_largest(H)
	d = time.time()
	print("Find connected components: ", str(d - c))
	options = {"node_size": 4}
	nx.draw_networkx_nodes(H, pos, nodelist=comps[largest], node_color="tab:blue", **options)
	for i in range(4):
		if len(comps) > i and i != largest:
			nx.draw_networkx_nodes(H, pos, nodelist=comps[i], node_color="tab:green", **options)
	nx.draw_networkx_nodes(H, pos, nodelist=cutset, node_color="tab:red", **options)
	# edges
	nx.draw_networkx_edges(H, pos, width=0.1)
	plt.savefig("out/10m11cut%s" % timestamp)
	e = time.time()
	print("drawing figure: ", str(e - d))

	plt.clf()
	with open(file="out/comps10m.txt", mode="a") as f:
		f.write("\n" * 2)
		print("\n")
		f.write("largest component at %s is index " % timestamp + str(largest) + ". All components:\n")
		print("largest component at %s is index " % timestamp + str(largest) + ". All components:")
		for i in range(len(comps)):
			f.write(str(comps[i]) + "\n")
			print(str(comps[i]))

	return H, comps, largest

# STEP 1: Computes various cores, so that you can select which one fits best.
# g = graph.read_graph(filepath="/Users/tobiasbreuer/Desktop/E&OR/Building and Mining Knowledge Graphs/Project/yago-wd-facts.nt")
# G = algorithms.custom_to_networkX_undir_graph(g)
# seed_figure = 3113794652
# algorithms.compute_different_kcores(G, start_k=13, end_k=16, seed_figure=seed_figure)

# # STEP 2: In case the clusters are not visible nicely enough, this uses a different seed to draw the same cores again.
# new_seed = 3113794652
# algorithms.redraw_clusterfigures_differentseed(desired_timestamp="25-03_10:52", start_k=11, end_k=11,
#                                                new_seed=new_seed)

seed_figure = 3113794652 # whichever seed looked best in STEP 1 or STEP 2

# TODO: Move (copy?) the chosen k-core graph file into the directory "/out/intermediategraphs" and rename to "timestamp_H".
# STEP 3: computes k many clusters based on a Node2Vec embedding and returns them in file timestamp_x_labels.
# G = nx.read_adjlist("out/intermediategraphs/25-03_21:54_H")
# algorithms.clustering_using_embedding(G, k=14, seed=seed_figure)   # Set k equal to the number of clusters you want to extract from the graph! (usually the number of clusters you can see  in the previously drawn figures)

# # TODO: Choose the clusters you want to accept from those written to the file timestamp_x_labels.txt in the previous step.
# # TODO: Add these clusters (list of nodes) to the list "clusters" (list of lists of nodes).
# # STEP 4: The accepted clusters can be removed. The remaining graph is saved with the timestamp printed to the console.
# clusters = [['27333', '33412', '33413', '35412', '36825', '36826', '36831', '36841', '36843', '36846', '36848', '36850', '36851', '36852', '36870', '36872', '36875', '36877', '36879', '36885', '36908', '36910', '36918', '36926', '36933', '36935', '36968', '37081', '37116', '37123', '37237', '37322', '37345', '37413', '37429', '37461', '37473', '37659', '37674', '37684', '37741', '37749', '37851', '38227', '38241', '38315', '38349', '38515', '38610', '38627', '38646', '38669', '38670', '38671', '38672', '38673', '38762', '38865', '39059', '39217', '39514', '39518', '40349', '40557', '41197', '41464', '41519', '41655', '41922', '42580', '42799', '42806', '43927', '45234', '47490', '47773', '52351', '52852', '52937', '52987', '53412', '53574', '53636', '54262', '55109', '55111', '55470', '56429', '57287', '59829', '60644', '60748', '62797', '65167', '69206', '72676', '74865', '81660', '81682', '83559', '84317', '84832', '85361', '89502', '89648', '91751', '92661', '92887', '95382', '100583', '104080', '106734', '114843', '118674', '118994', '123086', '126591', '141645', '142963', '144647', '214494', '249278', '697175', '697626', '698007', '698233', '914623', '1141631', '1308783', '1412241', '1420629', '1450522', '2065152', '2628222', '2634830', '2754291', '2905073', '2906088', '2973011', '2974298', '2991867', '2995695', '3221397', '3480123', '3504714', '3505982', '3507479', '3528361', '3529594', '3531831', '3533365', '3534047', '3534713', '3535547', '3535636', '3535659', '3536091', '3536100', '3536121', '3536372', '3536401', '3536888', '3540094', '3540951', '4124724', '4126511', '4130355', '4132256', '4221975', '5941019', '5942781', '5942782', '5942784', '5942797', '5942802', '5942810', '5943224', '5943245', '5943351']
#             , ['20', '58', '157', '222619', '270565', '286561', '286613', '287868', '288583', '289490', '290140', '290316', '290374', '301212', '302747', '302925', '303324', '304287', '304801', '305336', '306156', '306438', '502147', '1047740', '1096267', '1969003', '2333993', '2637479', '2930839', '2991609', '3028390', '3034227', '3036991', '3041578', '3045167', '3101723', '3329167', '3329172', '3329178', '3329188', '3329195', '3329196', '3329197', '3329198', '3329199', '3329202', '3329205', '3329224', '3329261', '3329274', '3330665', '3330762', '3332740', '3342163', '3344525', '3350478', '3353066', '3355259', '3361901']
#             ]
# G = nx.read_adjlist("out/intermediategraphs/27-03_12:57_H")
# algorithms.remove_clusters_save_draw(G, clusters, seed_figure)

# STEP 5: Repeat STEP 3 and 4 until you have found all clusters.

clusters = [['729', '1424', '2321', '10895', '36857', '36888', '36889', '38795', '151689', '151748', '152090', '153079', '153083', '153084', '153322', '153482', '153553', '153699', '153918', '153919', '153921', '153922', '153924', '153929', '153930', '154447', '154448', '154449', '154450', '154451', '154452', '154453', '154479', '154732', '154733', '154750', '154760', '154768', '154769', '154771', '154772', '154773', '154774', '154775', '154776', '154797', '154798', '154799', '154808', '154810', '154811', '154812', '154813', '154815', '154835', '154836', '154857', '154866', '154867', '154868', '154869', '154871', '155546', '155547', '155710', '155760', '155865', '155866', '155982', '155983', '155984', '155985', '155986', '155987', '156028', '156031', '156080', '156331', '156458', '156492', '156493', '156494', '156816', '156817', '156841', '157334', '157680', '157999', '158007', '158166', '158473', '158474', '158613', '158846', '159822', '160175', '160261', '160262', '160473', '160754', '160985', '160986', '160987', '160988', '161089', '161792', '161794', '162070', '162982', '163784', '163785', '163872', '163928', '163932', '163933', '163990', '164398', '164479', '164480', '164811', '165426', '166102', '166284', '166354', '166363', '166425', '166440', '166495', '166523', '166524', '166571', '166847', '166947', '167101', '168375', '168410', '168423', '168467', '168573', '168620', '168635', '168913', '168966', '168969', '169222', '169282', '169304', '169414', '169877', '170384', '170849', '170867', '170942', '171401', '171496', '171653', '175046', '175195', '175525', '175578', '175884', '176302', '176926', '177767', '178084', '178147', '178984', '179492', '180054', '180698', '180713', '180948', '181023', '181039', '181291', '181363', '181956', '182087', '182448', '182549', '182551', '182617', '182663', '182884', '183191', '183217', '183407', '183418', '183640', '183669', '183711', '183752', '183799', '183931', '183991', '184131', '184355', '184378', '184392', '184494', '184546', '184851', '185129', '185143', '185153', '185209', '185309', '185314', '185393', '185444', '185467', '185479', '186552', '186915', '188395', '188447', '188801', '189189', '189533', '189604', '189916', '190018', '190025', '190657', '191115', '191624', '191627', '191715', '191734', '191852', '191914', '191970', '192350', '192381', '192410', '192418', '192617', '193039', '193066', '193127', '193134', '193218', '193505', '193653', '193748', '193774', '193794', '193804', '193864', '193934', '194177', '194481', '194502', '194570', '194732', '194758', '194932', '195058', '195190', '195228', '195368', '195538', '195542', '195938', '195941', '196144', '196203', '196271', '196372', '196425', '196619', '196758', '197163', '197370', '197385', '197493', '197690', '197821', '198280', '198307', '198667', '199154', '199691', '199692', '199722', '200754', '201075', '201843', '203466', '203469', '203519', '203572', '203578', '203624', '203686', '203717', '203757', '204039', '204245', '205496', '205632', '205980', '205981', '205982', '205986', '206167', '206388', '206523', '206536', '206671', '206736', '206764', '206789', '207969', '208080', '208168', '208367', '208535', '208536', '208592', '209018', '209019', '210001', '210092', '210159', '210429', '211058', '211174', '211354', '211358', '211889', '212109', '212113', '212149', '212201', '212292', '212356', '212405', '212465', '212726', '213069', '213360', '213389', '213742', '213796', '214119', '214120', '214174', '214599', '214692', '214713', '214737', '214854', '214893', '214938', '214952', '214999', '215003', '215007', '215218', '215239', '215856', '216089', '216259', '216260', '216492', '216559', '216569', '216572', '216582', '216593', '216749', '217007', '217219', '217220', '217246', '217248', '217556', '217728', '217772', '217798', '217847', '217873', '217899', '217935', '218000', '218004', '218008', '218100', '218101', '218279', '218309', '218340', '218354', '218356', '218377', '218512', '218576', '218586', '218667', '218702', '218715', '218729', '218733', '218802', '218810', '218822', '218895', '218919', '218927', '219018', '219019', '219034', '219051', '219057', '219100', '219167', '219178', '219192', '219248', '219317', '219327', '219381', '219403', '219424', '219430', '219431', '219442', '219493', '219517', '219594', '219608', '219611', '219714', '219715', '219815', '219897', '219965', '219973', '219995', '220166', '220174', '220175', '220231', '220246', '220300', '220331', '220339', '220417', '220419', '220535', '220600', '220620', '220627', '220682', '220761', '220896', '220920', '220983', '221079', '221089', '221159', '221194', '221291', '221310', '221362', '221376', '221424', '221432', '221543', '221701', '221702', '221724', '221731', '221782', '222061', '222229', '222236', '222334', '222368', '222454', '222496', '222567', '222571', '222612', '222729', '222732', '222733', '222772', '222799', '222804', '222864', '222974', '223109', '223205', '223264', '223265', '223345', '223442', '223514', '223556', '223729', '223820', '223855', '223866', '223993', '224112', '224177', '224200', '224263', '224276', '224331', '224403', '224419', '224494', '224532', '224548', '224616', '224617', '224644', '224734', '224759', '224812', '224843', '224870', '224891', '224910', '224914', '224981', '225108', '225112', '225139', '225140', '225226', '225414', '225918', '225992', '226024', '226139', '226154', '226255', '226363', '226516', '226551', '226591', '226593', '226601', '226604', '226675', '226695', '226897', '227136', '227385', '227399', '227428', '227893', '228089', '228337', '230179', '230219', '230223', '230224', '230228', '230231', '230245', '230250', '230254', '230290', '230296', '230306', '230307', '230311', '230312', '230313', '230315', '230316', '230324', '230340', '230349', '230356', '230644', '230981', '230989', '231012', '231021', '231034', '231039', '231058', '231461', '231837', '232869', '232970', '233011', '233058', '235599', '236063', '236450', '236885', '238646', '240276', '240893', '241028', '241566', '242101', '242797', '242972', '242980', '242984', '242998', '243092', '244951', '245539', '245581', '245619', '245874', '245978', '247046', '247238', '247991', '248275', '248395', '248396', '248552', '248613', '249830', '250554', '252936', '254787', '255771', '255814', '257291', '257748', '257817', '258128', '258355', '258547', '258628', '258763', '258946', '259163', '259261', '259493', '259642', '260321', '261424', '261585', '261922', '262313', '262378', '262872', '263203', '263279', '263413', '263481', '263627', '263649', '264044', '264516', '264711', '265881', '266221', '266590', '266751', '267509', '267780', '267790', '268359', '269338', '270448', '270507', '271400', '272841', '272992', '273129', '273628', '276521', '277163', '277802', '277950', '278597', '278598', '278611', '278773', '278930', '279032', '279093', '279889', '280287', '280377', '280814', '281144', '281239', '281681', '281728', '281737', '282271', '282277', '282455', '282520', '282795', '282808', '282926', '282997', '283118', '283167', '283174', '283181', '283581', '283696', '283725', '283773', '283774', '283791', '283844', '283933', '283992', '284237', '284557', '307422', '307754', '308520', '308674', '311520', '318337', '326344', '326612', '672241', '969761', '1296404', '1414383', '1416723', '1427772', '1448075', '1489039', '1513319', '1670986', '1934650', '2197982', '2610985', '2627476', '2888139', '3151142', '3176823', '3196481', '3200814', '3315578', '3527473', '5774916', '5826727', '5827004', '5827338', '5828066', '5828460', '5945692', '5945795', '6303753', '6308507', '6308509']
, ['157509', '158301', '180981', '190262', '190295', '190394', '192030', '200397', '203179', '212739', '212955', '295364', '295478', '295829', '296015', '296047', '296385', '296432', '296553', '296589', '296594', '296697', '296755', '296763', '296774', '296790', '296849', '296854', '296874', '297010', '297075', '297269', '297377', '297378', '297421', '297497', '297559', '297858', '297991', '298177', '298210', '298388', '298393', '298394', '298507', '298600', '298792', '298836', '298906', '299121', '299150', '299157', '299228', '299230', '299258', '299259', '299277', '299291', '299435', '299592', '299761', '299781', '493988', '495788', '520096', '525519', '540302', '579444', '626303', '638087', '671745', '698934', '701642', '786329', '787959', '794182', '1427245', '3750929', '4220707', '4222623', '4222624', '4222625', '4222626', '4222629', '4222879', '4222911', '4222913', '4222970', '4223280', '4223343', '4223385', '4223491', '4223907', '4223911', '4224087', '4224147', '4224161', '4224195', '4224509', '4224562', '4224585', '6308508']
, ['1532824', '2059082', '2062292', '2065475', '2481405', '6446048', '6446049', '6446050', '6446051', '6446052', '6446053', '6446054', '6446055', '6446056', '6446057', '6446058', '6446059', '6446060', '6446061', '6446062', '6446063', '6446064', '6446065', '6446066', '6446067', '6446068', '6446069', '6446070', '6446071', '6446072', '6446073', '6446074', '6446075', '6446076', '6446077']
, ['27333', '33412', '33413', '35412', '36825', '36826', '36831', '36841', '36843', '36846', '36848', '36850', '36851', '36852', '36870', '36872', '36875', '36877', '36879', '36885', '36908', '36910', '36918', '36926', '36933', '36935', '36968', '37081', '37116', '37123', '37237', '37322', '37345', '37413', '37429', '37461', '37473', '37659', '37674', '37684', '37741', '37749', '37851', '38227', '38241', '38315', '38349', '38515', '38610', '38627', '38646', '38669', '38670', '38671', '38672', '38673', '38762', '38865', '39059', '39217', '39514', '39518', '40349', '40557', '41197', '41464', '41519', '41655', '41922', '42580', '42799', '42806', '43927', '45234', '47490', '47773', '52351', '52852', '52937', '52987', '53412', '53574', '53636', '54262', '55109', '55111', '55470', '56429', '57287', '59829', '60644', '60748', '62797', '65167', '69206', '72676', '74865', '81660', '81682', '83559', '84317', '84832', '85361', '89502', '89648', '91751', '92661', '92887', '95382', '100583', '104080', '106734', '114843', '118674', '118994', '123086', '126591', '141645', '142963', '144647', '214494', '249278', '697175', '697626', '698007', '698233', '914623', '1141631', '1308783', '1412241', '1420629', '1450522', '2065152', '2628222', '2634830', '2754291', '2905073', '2906088', '2973011', '2974298', '2991867', '2995695', '3221397', '3480123', '3504714', '3505982', '3507479', '3528361', '3529594', '3531831', '3533365', '3534047', '3534713', '3535547', '3535636', '3535659', '3536091', '3536100', '3536121', '3536372', '3536401', '3536888', '3540094', '3540951', '4124724', '4126511', '4130355', '4132256', '4221975', '5941019', '5942781', '5942782', '5942784', '5942797', '5942802', '5942810', '5943224', '5943245', '5943351']
, ['20', '58', '157', '222619', '270565', '286561', '286613', '287868', '288583', '289490', '290140', '290316', '290374', '301212', '302747', '302925', '303324', '304287', '304801', '305336', '306156', '306438', '502147', '1047740', '1096267', '1969003', '2333993', '2637479', '2930839', '2991609', '3028390', '3034227', '3036991', '3041578', '3045167', '3101723', '3329167', '3329172', '3329178', '3329188', '3329195', '3329196', '3329197', '3329198', '3329199', '3329202', '3329205', '3329224', '3329261', '3329274', '3330665', '3330762', '3332740', '3342163', '3344525', '3350478', '3353066', '3355259', '3361901']
, ['1513848', '1551987', '1760748', '1897904', '1897911', '2593443', '3029698', '3456717', '3457116', '3457695', '3462660', '3463260', '3464177', '3464186', '3464913', '3465405', '3465557', '3475691', '3477110', '3477319', '3477321', '3477784', '3478915', '3479254', '3479258', '3479259', '3479260', '3479261', '5941360', '5941361', '5941362', '5941363', '5941364', '5941365', '5941366', '5941367', '5941368', '5941369', '5941370', '5941371', '5941372', '5941373', '5941374', '5941375', '5941376', '5941377']
, ['909547', '1009789', '1009791', '1598904', '1912302', '3456493', '3456654', '3456696', '3456976', '3457184', '3457213', '3464838', '3466863', '3466864', '3467072', '3467408', '3467928', '3468070', '3468917', '3469101', '3469432', '3469464', '3469465', '3469466', '3469566', '3473827', '3479246', '5941304', '5941305', '5941306', '5941307', '5941308', '5941309', '5941310', '5941311', '5941312', '5941313', '5941314', '5941315', '5941316', '5941317', '5941318', '5941319', '5941320', '5941321', '5941322']
, ['27334', '37101', '37640', '169126', '186436', '195497', '207858', '250680', '282699', '336717', '376993', '380751', '386762', '403713', '462304', '472271', '473268', '477998', '532098', '692625', '697582', '798865', '911201', '927407', '928710', '946571', '962316', '970854', '994594', '1003163', '1010751', '1032447', '1032885', '1033377', '1043019', '1053626', '1054788', '1055656', '1057631', '1073671', '1073739', '1073929', '1074775', '1075116', '1078060', '1078119', '1078129', '1078209', '1086114', '1087733', '1088162', '1089685', '1096182', '1111166', '1153701', '1153976', '1170008', '1183582', '1189194', '1199966', '1200637', '1207825', '1218143', '1222471', '1225747', '1225788', '1256804', '1262023', '1263629', '1264556', '1270119', '1270408', '1279359', '1279400', '1285793', '1287084', '1293155', '1314804', '1322445', '1324858', '1324938', '1325761', '1326232', '1328146', '1329129', '1329217', '1329915', '1330535', '1330568', '1330616', '1330703', '1332219', '1334756', '1340649', '1341863', '1343173', '1343947', '1361728', '1362181', '1362418', '1362441', '1362449', '1367549', '1371612', '1379724', '1381205', '1381806', '1385189', '1391097', '1391107', '1395144', '1396466', '1398393', '1398407', '1406975', '1408361', '1424659', '1425961', '1440209', '1442648', '1442679', '1442756', '1442764', '1445014', '1449770', '1453964', '1462356', '1463442', '1467618', '1473815', '1473987', '1475598', '1478278', '1490292', '1494127', '1495504', '1501222', '1502617', '1502684', '1502700', '1503221', '1505109', '1506305', '1507131', '1509159', '1510654', '1514222', '1514653', '1517211', '1519216', '1521889', '1524625', '1526622', '1527476', '1536031', '1545321', '1545323', '1550768', '1556756', '1562044', '1563511', '1578281', '1581885', '1584524', '1586642', '1591129', '1607800', '1620450', '1634163', '1634630', '1650923', '1660340', '1674950', '1707495', '1715447', '1719005', '1722468', '1728023', '1734268', '1750149', '1752457', '1767585', '1769020', '1772113', '1773986', '1775357', '1781465', '1784218', '1791769', '1801506', '1801972', '1803913', '1810179', '1829263', '1831537', '1836595', '1851370', '1858741', '1860396', '1865815', '1876314', '1883669', '1884450', '1886851', '1899016', '1901935', '1907422', '1908200', '1917450', '1921631', '1926868', '1949400', '1954118', '1955040', '1958862', '1960549', '1962564', '1962984', '1963101', '1965105', '1972173', '1972519', '1973377', '1975048', '1975429', '1976107', '1977257', '1978635', '1979256', '1981920', '1981940', '1987259', '2001537', '2008983', '2011833', '2015172', '2016672', '2017604', '2037230', '2050080', '2078323', '2087859', '2097295', '2098280', '2098599', '2104390', '2107662', '2107722', '2108013', '2108030', '2108062', '2108065', '2108084', '2108167', '2108190', '2109253', '2119895', '2124867', '2124888', '2128463', '2128475', '2130133', '2131537', '2138685', '2140148', '2150580', '2150592', '2150770', '2151753', '2155437', '2155467', '2159986', '2164871', '2176674', '2184286', '2228324', '2243186', '2243209', '2243215', '2246693', '2251938', '2256936', '2272442', '2276799', '2286940', '2290057', '2298195', '2304867', '2351616', '2381573', '2387727', '2406400', '2406584', '2406603', '2407042', '2415533', '2437029', '2439363', '2441978', '2454753', '2461360', '2461377', '2461401', '2462735', '2462743', '2462801', '2464460', '2475028', '2485721', '2487986', '2491342', '2522956', '2530826', '2532232', '2544374', '2556343', '2569945', '2576964', '2601863', '2632847', '2641094', '2641462', '2703764', '2711484', '2720952', '2721233', '2722807', '2744033', '2744067', '2744098', '2744146', '2744555', '2758719', '2759161', '2769629', '2772162', '2772182', '2786983', '2787778', '2796147', '2809360', '2840757', '2875812', '2887890', '2889282', '2920402', '2975254', '2975937', '2982494', '2990851', '3019504', '3021912', '3023133', '3025768', '3028701', '3033049', '3039871', '3041420', '3042846', '3043653', '3045364', '3046794', '3047410', '3047746', '3049788', '3049950', '3054284', '3054811', '3058040', '3058342', '3058783', '3061883', '3065335', '3065625', '3065701', '3065716', '3067473', '3068696', '3069787', '3071506', '3071824', '3075548', '3080769', '3081840', '3081888', '3082152', '3295785', '3449354', '3449473', '3450229', '3450374', '3455095', '3466299', '3472328', '3473665', '3475631', '3475632', '3475633', '3475634', '3475635', '3475636', '3475638', '3475639', '3475640', '3475641', '3475642', '3475643', '3475651', '3475652', '3475653', '3475654', '3475655', '3475656', '3475657', '3475658', '3475664', '3475665', '3475666', '3475667', '3475668', '3475669', '3475718', '3476312', '3477599', '3478907', '3478927', '3478928', '3478937', '3516092', '3518021', '3526380', '3528865', '3622746', '3694270', '3697062', '3717508', '3736422', '5941640', '5941641', '5941642', '5941643', '5941644', '5941645', '5941646', '5941647', '5941648', '5941649', '5941650', '5941651', '5941652', '5941653', '5941654', '6388546']
, ['1146897', '1179680', '1193618', '1207853', '1294616', '1331530', '1362064', '3023137', '3457508', '3457544', '3457604', '3457648', '3457663', '3457673', '3457681', '3457713', '3457719', '3457720', '3457721', '3457722', '3457723', '3458061', '3460047', '3460355', '3460400', '3460534', '3462438', '5941410', '5941412', '5941413', '5941414', '5941415', '5941418', '5941419', '5941420', '5941421', '5941422', '5941423', '5941424', '5941425', '5941426', '5941427', '5941428', '5941429', '5941430']
, ['1551981', '1627980', '1897288', '1897889', '2773815', '2887679', '2988734', '2995672', '3028721', '3456799', '3461092', '3464112', '3464136', '3473655', '3475924', '3477071', '3477114', '3477167', '3477847', '3479014', '3479185', '3479186', '3479187', '3479188', '3479189', '3479270', '5941380', '5941381', '5941382', '5941384', '5941385', '5941386', '5941387', '5941388', '5941389', '5941390', '5941391', '5941392', '5941393', '5941394', '5941396', '5941397', '5941399', '5941400']
, ['1396615', '1469305', '1472820', '1474137', '1476393', '1505476', '1510060', '1522411', '1547050', '1547109', '1701127', '3418862', '3420066', '3420108', '3420161', '3420162', '3420255', '3421138', '3421177', '3421630', '3422201', '3422319', '3422348', '3422545', '3422651', '3422918', '3423094', '3423807', '3423809', '3426524', '3426525', '3426650', '5941497', '5941498', '5941499', '5941500', '5941501', '5941502', '5941503', '5941504', '5941505', '5941506', '5941508', '5941509', '5941510', '5941511', '5941512', '5941513', '5941514', '5941515', '5941516']
, ['697590', '1547052', '1548501', '1721233', '1722291', '3464132', '3466072', '3466073', '3466277', '3466278', '3466280', '3466281', '3466282', '3466283', '3466284', '3466293', '3466294', '3466295', '3466296', '3466297', '3466298', '3466418', '3466431', '3466432', '3466434', '3466442', '3466836', '3466852', '3466859', '3466881', '3500611', '5941567', '5941568', '5941569', '5941570', '5941571', '5941572', '5941573', '5941574', '5941575', '5941576', '5941577', '5941578', '5941579', '5941580', '5941581', '5941582']
, ['2090674', '2150584', '2150594', '2172252', '2306494', '2321747', '2321749', '2321751', '3445175', '3449113', '3469476', '3472321', '3472322', '3472323', '3472324', '3472325', '3472326', '3472327', '3473385', '3473495', '3473503', '3473532', '3473659', '3473660', '3473661', '3473662', '3473663', '3473666', '5941617', '5941618', '5941619', '5941620', '5941621', '5941622', '5941623', '5941624', '5941625', '5941626', '5941627', '5941628', '5941629', '5941630', '5941631', '5941632', '5941633', '5941634']
, ['1164813', '1379516', '1404995', '1404997', '1404999', '1406007', '1407572', '1429130', '1440987', '3461616', '3461624', '3461768', '3461771', '3461783', '3461891', '3461895', '3461967', '3462000', '3462001', '3462051', '3462052', '3462053', '3462061', '3462062', '3462063', '3462064', '3462065', '5941436', '5941437', '5941438', '5941439', '5941440', '5941441', '5941442', '5941443', '5941445', '5941447', '5941448', '5941449', '5941450', '5941451', '5941452', '5941454', '5941457']
]

# # STEP 6: Draw the clusters into the original k-core graph.
# G_filepath = "out/kcoregraphs/25-03_21:54_16-core"
# algorithms.color_clusters_in_graph(G_filepath=G_filepath,
#                                    clusters=clusters,
#                                    seed=seed_figure)

# STEP 7: For each cluster, produce RDF file.
a = time.time()
g_original = graph.read_graph(filepath="/Users/tobiasbreuer/Desktop/E&OR/Building and Mining Knowledge Graphs/Project/yago-wd-facts.nt")
b = time.time()
print("Read yago: " + str(b - a))
G = nx.read_adjlist("out/kcoregraphs/25-03_21:54_16-core")
c = time.time()
print("Read kcore graph: " + str(c - b))
for i in range(len(clusters)):
	print("--- Cluster " + str(i) + " ---")
	d = time.time()
	H = algorithms.reduce_graph_to_cluster(G, clusters[i])
	e = time.time()
	print("Reduced graph: " + str(e - d))
	g = algorithms.networkX_to_custom_graph(H, g_original)
	f = time.time()
	print("custom graph created from nx graph: " + str(f - e))
	algorithms.custom_graph_to_rdf(g, "out/finalclustersrdf/cluster%s.nt" % i)
	h = time.time()
	print("written to RDF: " + str(h - f))






